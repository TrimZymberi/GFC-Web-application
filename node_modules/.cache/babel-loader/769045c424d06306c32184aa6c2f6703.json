{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction toPercent(num) {\n  if (num <= 0) return '100%';\n  if (num < 1) return `${num * 100}%`;\n  return `${num}%`;\n}\n\nconst Ratio = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  aspectRatio = '1x1',\n  style,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'ratio');\n  const isCustomRatio = typeof aspectRatio === 'number';\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    style: { ...style,\n      ...(isCustomRatio && {\n        '--bs-aspect-ratio': toPercent(aspectRatio)\n      })\n    },\n    className: classNames(bsPrefix, className, !isCustomRatio && `${bsPrefix}-${aspectRatio}`),\n    children: React.Children.only(children)\n  });\n});\nexport default Ratio;","map":{"version":3,"sources":["C:/Users/Hp/Desktop/projekti_lab1/node_modules/react-bootstrap/esm/Ratio.js"],"names":["classNames","React","useBootstrapPrefix","jsx","_jsx","toPercent","num","Ratio","forwardRef","bsPrefix","className","children","aspectRatio","style","props","ref","isCustomRatio","Children","only"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,MAAIA,GAAG,IAAI,CAAX,EAAc,OAAO,MAAP;AACd,MAAIA,GAAG,GAAG,CAAV,EAAa,OAAQ,GAAEA,GAAG,GAAG,GAAI,GAApB;AACb,SAAQ,GAAEA,GAAI,GAAd;AACD;;AACD,MAAMC,KAAK,GAAG,aAAaN,KAAK,CAACO,UAAN,CAAiB,CAAC;AAC3CC,EAAAA,QAD2C;AAE3CC,EAAAA,SAF2C;AAG3CC,EAAAA,QAH2C;AAI3CC,EAAAA,WAAW,GAAG,KAJ6B;AAK3CC,EAAAA,KAL2C;AAM3C,KAAGC;AANwC,CAAD,EAOzCC,GAPyC,KAOjC;AACTN,EAAAA,QAAQ,GAAGP,kBAAkB,CAACO,QAAD,EAAW,OAAX,CAA7B;AACA,QAAMO,aAAa,GAAG,OAAOJ,WAAP,KAAuB,QAA7C;AACA,SAAO,aAAaR,IAAI,CAAC,KAAD,EAAQ;AAC9BW,IAAAA,GAAG,EAAEA,GADyB;AAE9B,OAAGD,KAF2B;AAG9BD,IAAAA,KAAK,EAAE,EACL,GAAGA,KADE;AAEL,UAAIG,aAAa,IAAI;AACnB,6BAAqBX,SAAS,CAACO,WAAD;AADX,OAArB;AAFK,KAHuB;AAS9BF,IAAAA,SAAS,EAAEV,UAAU,CAACS,QAAD,EAAWC,SAAX,EAAsB,CAACM,aAAD,IAAmB,GAAEP,QAAS,IAAGG,WAAY,EAAnE,CATS;AAU9BD,IAAAA,QAAQ,EAAEV,KAAK,CAACgB,QAAN,CAAeC,IAAf,CAAoBP,QAApB;AAVoB,GAAR,CAAxB;AAYD,CAtB0B,CAA3B;AAuBA,eAAeJ,KAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nfunction toPercent(num) {\r\n  if (num <= 0) return '100%';\r\n  if (num < 1) return `${num * 100}%`;\r\n  return `${num}%`;\r\n}\r\nconst Ratio = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  children,\r\n  aspectRatio = '1x1',\r\n  style,\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'ratio');\r\n  const isCustomRatio = typeof aspectRatio === 'number';\r\n  return /*#__PURE__*/_jsx(\"div\", {\r\n    ref: ref,\r\n    ...props,\r\n    style: {\r\n      ...style,\r\n      ...(isCustomRatio && {\r\n        '--bs-aspect-ratio': toPercent(aspectRatio)\r\n      })\r\n    },\r\n    className: classNames(bsPrefix, className, !isCustomRatio && `${bsPrefix}-${aspectRatio}`),\r\n    children: React.Children.only(children)\r\n  });\r\n});\r\nexport default Ratio;"]},"metadata":{},"sourceType":"module"}